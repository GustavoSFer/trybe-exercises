{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/trybe/trybe-exercises/bloco-12/dia-2/fomulario/src/TextoInfo.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TextoInfo extends React.Component {\n  render() {\n    const {\n      value,\n      onChange\n    } = this.props;\n    let erro = undefined;\n    if (value.length > 120) erro = 'Mensagem muito grande!';\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"textoInfo\",\n          value: value,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), erro !== undefined ? erro : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TextoInfo;","map":{"version":3,"sources":["/home/gustavo/trybe/trybe-exercises/bloco-12/dia-2/fomulario/src/TextoInfo.js"],"names":["React","TextoInfo","Component","render","value","onChange","props","erro","undefined","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AAEA,QAAIC,IAAI,GAAGC,SAAX;AACA,QAAGJ,KAAK,CAACK,MAAN,GAAe,GAAlB,EAAuBF,IAAI,GAAG,wBAAP;AAEvB,wBACE;AAAA,6BACE;AAAA,gCACE;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAC,WAA3B;AAAuC,UAAA,KAAK,EAAEH,KAA9C;AAAqD,UAAA,QAAQ,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADF,EAEKE,IAAI,KAAKC,SAAV,GAAuBD,IAAvB,GAA8B,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAfqC;;AAkBxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\n\nclass TextoInfo extends React.Component {\n  render() {\n    const { value, onChange } = this.props\n\n    let erro = undefined;\n    if(value.length > 120) erro = 'Mensagem muito grande!';\n\n    return(\n      <fieldset>\n        <label>\n          <textarea type=\"text\" name=\"textoInfo\" value={value} onChange={onChange}/>\n          { (erro !== undefined) ? erro : '' }\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nexport default TextoInfo;"]},"metadata":{},"sourceType":"module"}